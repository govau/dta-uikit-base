<?php

/**
 *
 * Implements hook_preprocess_HOOK()
 *
 * This fiddles about with some elements to make them compatible with the Design System.
 *
 **/

// /* Turns the 'wrapped label' setting on for checkboxes. */
// function dta_uikit_base_preprocess_input__checkbox(&$variables) {
//  $variables['element']['#wrapped_label'] = TRUE;
// }
//
// /* Turns the 'wrapped label' setting on for radio buttons. */
// function dta_uikit_base_preprocess_input__radio(&$variables) {
//  $variables['element']['#wrapped_label'] = TRUE;
// }
//
function dta_uikit_base_theme_suggestions_form_element_alter(array &$suggestions, array $variables) {
  if ($variables['element']['#type'] === 'checkbox') {
    $suggestions[] = 'form_element__checkbox';
  }
  if ($variables['element']['#type'] === 'radio') {
    $suggestions[] = 'form_element__radio';
  }
}

function dta_uikit_base_theme_suggestions_form_element_label_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'form_element_label';
}
//
// function dta_uikit_base_preprocess_form_element__wrapped(&$variables) {
//  $variables['label']['#theme'] = 'form_element_label__open';
//  $variables['label_open'] = $variables['label'];
//  unset($variables['label']);
//  $variables['title'] = $variables['element']['#title'];
// }

/**
 * Implements hook_theme_suggestions_block_alter().
 *
 * As per https://www.drupal.org/docs/8/theming-drupal-8/creating-a-drupal-8-sub-theme-or-sub-theme-of-sub-theme
 * to ensure that sub themes inherit block templates.
 */
function dta_uikit_base_theme_suggestions_block_alter(&$suggestions, $variables) {
  foreach ($suggestions as &$suggestion) {
    $suggestion = str_replace('stable_', 'dta_uikit_base_', $suggestion);
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */

function dta_uikit_base_theme_suggestions_page_alter(&$suggestions, $variables, $hook) {
  /**
   * 404 template suggestion.
   *
   * From https://stackoverflow.com/a/49579500/1550345.
   */
  if (!is_null(Drupal::requestStack()->getCurrentRequest()->attributes->get('exception'))) {
    $status_code = Drupal::requestStack()->getCurrentRequest()->attributes->get('exception')->getStatusCode();
    if ($status_code == 403 || $status_code == 404) {
      $suggestions[] = 'page__error';
      $suggestions[] = 'page__error__' . (string) $status_code;
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter()
 *
 * Adds theme suggestions to views templates.
 */

function dta_uikit_base_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  // Adds theme suggestions to views.

  $id = $variables['view']->id();
  $display = $variables['view']->current_display;

  $suggestions[] = 'views_view__' . (string) $id;
  $suggestions[] = 'views_view__' . (string) $display;
  $suggestions[] = 'views_view__' . (string) $id . '__' . (string) $display;
}

function dta_uikit_base_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
  // Adds theme suggestions to fieldsets using the ID of the element (if it exists), and the
  // ID of the parent form (for templating all the fieldsets in a form, for example).
  $original = $variables['theme_hook_original'];

  $element = $variables['element'];

  if (isset($element['#attributes']['data-twig-suggestion'])) {
    $suggestion_suffix = str_replace(['-'], '_', $element['#attributes']['data-twig-suggestion']);
    $suggestions[] = $original . '__' . (string) $suggestion_suffix;
  }

  $id = (!empty($variables['element']['#id'])) ? str_replace('-','_', $variables['element']['#id']) : '';

  if ($id) {
    $suggestions[] = $original . '__' . (string) $id;
  }
}

function dta_uikit_base_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Adds twig suggestions to elements of forms based on the form ID.
  foreach (\Drupal\Core\Render\Element::children($form) as $key) {
    $form[$key]['#attributes']['data-twig-suggestion'] = $form['#id'];
  }

  $form['actions']['submit']['#attributes']['data-twig-suggestion'] = $form['#id'];
}
